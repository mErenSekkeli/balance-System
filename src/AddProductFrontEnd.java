
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

public class AddProductFrontEnd extends javax.swing.JFrame {
    ProductOperations set = new ProductOperations();
    /**
     * Creates new form AddProductFrontEnd
     */
    public AddProductFrontEnd() {
        initComponents();
    }
    
    public void Inject(){
        java.awt.EventQueue.invokeLater(() -> {
                new AddProductFrontEnd().setVisible(true);
            });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addProduct = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        labelPrice = new javax.swing.JLabel();
        labelCost = new javax.swing.JLabel();
        labelMarketPrice = new javax.swing.JLabel();
        labelStock = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        marketPrice = new javax.swing.JTextField();
        cost = new javax.swing.JTextField();
        stock = new javax.swing.JTextField();
        error_message = new javax.swing.JLabel();
        addProduct1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Urun Ekleme");
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        addProduct.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addProduct.setText("Ürün Ekle");
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("ÜRÜN EKLEME");

        labelName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelName.setText("Ürün Adı:");

        labelPrice.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelPrice.setText("Ürün Fiyatı:");

        labelCost.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelCost.setText("Ürünün Maliyeti:");

        labelMarketPrice.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelMarketPrice.setText("Ortalama Pazar Fiyatı:");

        labelStock.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelStock.setText("Stok Adeti:");

        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });

        marketPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marketPriceActionPerformed(evt);
            }
        });

        cost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costActionPerformed(evt);
            }
        });

        stock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                stokKeyTyped(evt);
            }
        });

        error_message.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        addProduct1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addProduct1.setText("Ürün Listesi");
        addProduct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProduct1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(460, 460, 460)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(error_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addProduct1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addProduct))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelStock)
                            .addComponent(labelCost)
                            .addComponent(labelMarketPrice)
                            .addComponent(labelPrice)
                            .addComponent(labelName))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(price)
                            .addComponent(cost, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(marketPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(stock, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(473, 473, 473))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(544, 544, 544))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelName)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPrice)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCost)
                            .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMarketPrice)
                            .addComponent(marketPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(labelStock)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addProduct)
                    .addComponent(addProduct1))
                .addGap(18, 18, 18)
                .addComponent(error_message, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(264, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void costActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costActionPerformed

    private void marketPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marketPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marketPriceActionPerformed

    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
        
        if(name.getText().equals("")){
            error_message.setForeground(Color.RED);
            error_message.setText("Urun Ismi Bos Birakilamaz!");
        }else if(price.getText().equals("")){
            error_message.setForeground(Color.RED);
            error_message.setText("Urunun Fiyati Bos Birakilamaz!");
        }else if(cost.getText().equals("")){
            error_message.setForeground(Color.RED);
            error_message.setText("Urunun Maliyeti Bos Birakilamaz!");
        }else if(marketPrice.getText().equals("")){
            error_message.setForeground(Color.RED);
            error_message.setText("Pazar Fiyati Bos Birakilamaz!");
        }else if(stock.getText().equals("")){
            error_message.setForeground(Color.RED);
            error_message.setText("Stok Miktari Bos Birakilamaz!");
        } else if (Integer.parseInt(stock.getText()) < 0) { 
            error_message.setForeground(Color.RED);
            error_message.setText("Stok Miktari negatif olamaz!");
        }
        else{
            boolean result = set.add(name.getText(),Double.parseDouble(price.getText()),Double.parseDouble(cost.getText()),Double.parseDouble(marketPrice.getText()),Integer.parseInt(stock.getText()));
            
            if(result) {
                JOptionPane.showMessageDialog(this, "Ürünler başarıyla eklendi");
            } else {
                JOptionPane.showMessageDialog(this, "Ürünler eklenemedi. Bir hata oluştu.");
            }
            
        }
    }//GEN-LAST:event_addProductActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void addProduct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProduct1ActionPerformed
        ProductList list = new ProductList();
        //setVisible(false);
        list.setVisible(true);
        //list.listInject();
    }//GEN-LAST:event_addProduct1ActionPerformed

    private void stokKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stokKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();  // if it's not a number, ignore the event
        }
    }//GEN-LAST:event_stokKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProduct;
    private javax.swing.JButton addProduct1;
    private javax.swing.JTextField cost;
    private javax.swing.JLabel error_message;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelCost;
    private javax.swing.JLabel labelMarketPrice;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPrice;
    private javax.swing.JLabel labelStock;
    private javax.swing.JTextField marketPrice;
    private javax.swing.JTextField name;
    private javax.swing.JTextField price;
    private javax.swing.JTextField stock;
    // End of variables declaration//GEN-END:variables
}
