
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author laptop
 */
public class OrderItemsView extends javax.swing.JFrame {

    /**
     * Creates new form ListRefundedProductsUI
     */
    private static final int ORDER_ITEM_ID_COLUMN = 0;
    private static final int ORDER_ID_COLUMN = 1;
    private static final int AMOUNT_COLUMN = 3;
    private static final int REFUNDED_COLUMN = 6;
    private int orderId;
    private SalesDbHelper orderManager;
    private ProductOperations pOps;
    private Map<Integer, Product> products;
    public OrderItemsView(SalesDbHelper orderManager, ProductOperations pOps, int orderId) {
        this.orderId = orderId;
        this.orderManager = orderManager;
        this.pOps = pOps;
        products = new HashMap<>();
        initComponents();
        
        loadOrderItems();
    }
    
    private void loadOrderItems() {
        products.clear();
        
        getDefaultModel().setRowCount(0);
        ArrayList<OrderItem> items = orderManager.getItemsOfSale(orderId);
        int[] ids = new int[items.size()];
        int index = 0;
         
        for(OrderItem item: items) {
            ids[index] = item.productID;
            index++;
        }
        ArrayList<Product> prods;
        prods = pOps.getProductsById(ids);
        
        int i = 0;
        for(OrderItem item: items) {
            products.put(item.ID, prods.get(i));
            addItemToList(item);   
            i++;
        }
    }

    private DefaultTableModel getDefaultModel() {
        return (DefaultTableModel) jTable1.getModel();
    }
    private void addItemToList(OrderItem item) {
        getDefaultModel().addRow(new Object[]{item.ID, item.saleID, products.get(item.ID).name, item.amount, item.price, item.cost, item.isRefunded});
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        amountComponent = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Siparisin Urun Listesi");
        setPreferredSize(null);
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Sipariş Kimliği", "Ürün Adı", "Adet", "Fiyat", "Maliyet", "İade Edildi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel1.setText("Ürünlerin listesi aşağıdadır");

        jButton2.setText("Ürünü iade et");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        amountComponent.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10000, 1));

        jLabel2.setText("Adet");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(209, 209, 209)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountComponent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(amountComponent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int amount = Integer.parseInt(amountComponent.getValue().toString());
        int selectedRowId = jTable1.getSelectedRow();
        if(selectedRowId == -1) {
            JOptionPane.showMessageDialog(this, "Herhangi bir sipariş seçmediniz!");
            return;
        }
        int orderItemId = (int)jTable1.getValueAt(selectedRowId, ORDER_ITEM_ID_COLUMN);
        int orderId = (int)jTable1.getValueAt(selectedRowId, ORDER_ID_COLUMN);
        int maxAmount = (int) jTable1.getValueAt(selectedRowId, AMOUNT_COLUMN);
        boolean refunded = (boolean) jTable1.getValueAt(selectedRowId, REFUNDED_COLUMN);
        
        if(refunded) {
            JOptionPane.showMessageDialog(this, "Bu ürün zaten iade edilmiş!");
            return;
        }
        if(amount > maxAmount) {
            JOptionPane.showMessageDialog(this, "Fazla adet seçtiniz!");
            return;
        }
        
        if(orderManager.refundOrderItem(orderItemId, orderId, amount)){
            JOptionPane.showMessageDialog(this, "Ürün(ler) başarıyla iade edildi.");
            loadOrderItems();
        } else {
            JOptionPane.showMessageDialog(this, "Ürün(ler) başarıyla iade edilirken bir hata oluştu.");
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner amountComponent;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
